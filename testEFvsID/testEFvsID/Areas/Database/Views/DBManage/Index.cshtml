@using Microsoft.EntityFrameworkCore;
@inject AppDBContext dbContext
@{
    ViewData["Title"]="Thông tin db";
    var connect = dbContext.Database.GetDbConnection();
    var dbname = connect.Database;
    var can_connect = dbContext.Database.CanConnect();
    dbContext.Database.GetAppliedMigrations();
}
<partial name="_AlertMessage"/>
<p>Database: @dbname</p>
<p>Database: @connect.DataSource</p>
<p>Database: @connect.State</p>

<h2>Migration</h2>
@foreach (var mi in dbContext.Database.GetAppliedMigrations())
{
    <p>@mi</p>
}
@foreach (var mi in dbContext.Database.GetPendingMigrations())
{
    <p>@mi (pending)</p>
}
@if (!can_connect)
{
    <p class="alert alert-danger">Ko thể kết nối đến database </p>
}
@if (dbContext.Database.GetPendingMigrations().Any())
{
    <form method="post">
        <button asp-action="Migrate" class="btn btn-success">Tạo Db (cập nhật mỉgration)</button>
    </form>
}
@if (can_connect)
{
    <h2>Các table</h2>
    await dbContext.Database.OpenConnectionAsync();
    var table = dbContext.Database.GetDbConnection().GetSchema("Tables");
    <ul>

    
    @foreach(System.Data.DataRow row in table.Rows)
    {
        <li>@row["TABLE_NAME"]</li>
    }
    </ul>
    <a asp-action="DeleteDb" class="btn btn-danger">Xóa database: @dbname</a>
    <a asp-action="SeedData" class="btn btn-danger">Seed data</a>

}